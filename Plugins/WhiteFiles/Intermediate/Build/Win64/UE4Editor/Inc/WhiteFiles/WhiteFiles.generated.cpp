// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/WhiteFilesPrivatePCH.h"
#include "WhiteFiles.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1WhiteFiles() {}
static class UEnum* UnrealPaths_StaticEnum()
{
	extern WHITEFILES_API class UPackage* Z_Construct_UPackage__Script_WhiteFiles();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern WHITEFILES_API class UEnum* Z_Construct_UEnum_WhiteFiles_UnrealPaths();
		Singleton = GetStaticEnum(Z_Construct_UEnum_WhiteFiles_UnrealPaths, Z_Construct_UPackage__Script_WhiteFiles(), TEXT("UnrealPaths"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_UnrealPaths(UnrealPaths_StaticEnum, TEXT("/Script/WhiteFiles"), TEXT("UnrealPaths"), false, nullptr, nullptr);
	void UWhiteFilesBPLibrary::StaticRegisterNativesUWhiteFilesBPLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UWhiteFilesBPLibrary::StaticClass(), "GetAllFilesInDirectory",(Native)&UWhiteFilesBPLibrary::execGetAllFilesInDirectory);
		FNativeFunctionRegistrar::RegisterFunction(UWhiteFilesBPLibrary::StaticClass(), "GetPathToDirectory",(Native)&UWhiteFilesBPLibrary::execGetPathToDirectory);
		FNativeFunctionRegistrar::RegisterFunction(UWhiteFilesBPLibrary::StaticClass(), "HasExtentions",(Native)&UWhiteFilesBPLibrary::execHasExtentions);
		FNativeFunctionRegistrar::RegisterFunction(UWhiteFilesBPLibrary::StaticClass(), "RemoveInvalidCharacters",(Native)&UWhiteFilesBPLibrary::execRemoveInvalidCharacters);
	}
	IMPLEMENT_CLASS(UWhiteFilesBPLibrary, 4107852369);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	WHITEFILES_API class UEnum* Z_Construct_UEnum_WhiteFiles_UnrealPaths();
	WHITEFILES_API class UFunction* Z_Construct_UFunction_UWhiteFilesBPLibrary_GetAllFilesInDirectory();
	WHITEFILES_API class UFunction* Z_Construct_UFunction_UWhiteFilesBPLibrary_GetPathToDirectory();
	WHITEFILES_API class UFunction* Z_Construct_UFunction_UWhiteFilesBPLibrary_HasExtentions();
	WHITEFILES_API class UFunction* Z_Construct_UFunction_UWhiteFilesBPLibrary_RemoveInvalidCharacters();
	WHITEFILES_API class UClass* Z_Construct_UClass_UWhiteFilesBPLibrary_NoRegister();
	WHITEFILES_API class UClass* Z_Construct_UClass_UWhiteFilesBPLibrary();
	WHITEFILES_API class UPackage* Z_Construct_UPackage__Script_WhiteFiles();
	UEnum* Z_Construct_UEnum_WhiteFiles_UnrealPaths()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_WhiteFiles();
		extern uint32 Get_Z_Construct_UEnum_WhiteFiles_UnrealPaths_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("UnrealPaths"), 0, Get_Z_Construct_UEnum_WhiteFiles_UnrealPaths_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnrealPaths"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("UnrealPaths::GameRoot")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("UnrealPaths::GameContent")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("UnrealPaths::GameMovies")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("UnrealPaths::GameConfig")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("UnrealPaths::GameLog")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("UnrealPaths::GameSave")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("UnrealPaths::GameUser")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("UnrealPaths::UnrealPaths_MAX")), 7));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("UnrealPaths");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("GameConfig.DisplayName"), TEXT("GameConfig"));
			MetaData->SetValue(ReturnEnum, TEXT("GameContent.DisplayName"), TEXT("GameContent"));
			MetaData->SetValue(ReturnEnum, TEXT("GameLog.DisplayName"), TEXT("GameLog"));
			MetaData->SetValue(ReturnEnum, TEXT("GameMovies.DisplayName"), TEXT("GameMovies"));
			MetaData->SetValue(ReturnEnum, TEXT("GameRoot.DisplayName"), TEXT("GameRoot"));
			MetaData->SetValue(ReturnEnum, TEXT("GameSave.DisplayName"), TEXT("GameSave"));
			MetaData->SetValue(ReturnEnum, TEXT("GameUser.DisplayName"), TEXT("GameUser"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/WhiteFilesBPLibrary.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("*      Function library class.\n*      Each function in it is expected to be static and represents blueprint node that can be called in any blueprint.\n*\n*      When declaring function you can define metadata for the node. Key function specifiers will be BlueprintPure and BlueprintCallable.\n*      BlueprintPure - means the function does not affect the owning object in any way and thus creates a node without Exec pins.\n*      BlueprintCallable - makes a function which can be executed in Blueprints - Thus it has Exec pins.\n*      DisplayName - full name of the node, shown when you mouse over the node and in the blueprint drop down menu.\n*                              Its lets you name the node using characters not allowed in C++ function names.\n*      CompactNodeTitle - the word(s) that appear on the node.\n*      Keywords -      the list of keywords that helps you to find node when you search for it using Blueprint drop-down menu.\n*                              Good example is \"Print String\" node which you can find also by using keyword \"log\".\n*      Category -      the category your node will be under in the Blueprint drop-down menu.\n*\n*      For more info on custom blueprint nodes visit documentation:\n*      https://wiki.unrealengine.com/Custom_Blueprint_Node_Creation"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_WhiteFiles_UnrealPaths_CRC() { return 2582233452U; }
	UFunction* Z_Construct_UFunction_UWhiteFilesBPLibrary_GetAllFilesInDirectory()
	{
		struct WhiteFilesBPLibrary_eventGetAllFilesInDirectory_Parms
		{
			FString Path;
			bool filterDirectories;
			TArray<FString> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UWhiteFilesBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetAllFilesInDirectory"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(WhiteFilesBPLibrary_eventGetAllFilesInDirectory_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, WhiteFilesBPLibrary_eventGetAllFilesInDirectory_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(filterDirectories, WhiteFilesBPLibrary_eventGetAllFilesInDirectory_Parms, bool);
			UProperty* NewProp_filterDirectories = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("filterDirectories"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(filterDirectories, WhiteFilesBPLibrary_eventGetAllFilesInDirectory_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(filterDirectories, WhiteFilesBPLibrary_eventGetAllFilesInDirectory_Parms), sizeof(bool), true);
			UProperty* NewProp_Path = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Path"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Path, WhiteFilesBPLibrary_eventGetAllFilesInDirectory_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("WhiteFiles"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_filterDirectories"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get All files/Folders in a path"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("WhiteFiles Path dir files find"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/WhiteFilesBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UWhiteFilesBPLibrary_GetPathToDirectory()
	{
		struct WhiteFilesBPLibrary_eventGetPathToDirectory_Parms
		{
			TEnumAsByte<UnrealPaths> Path;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UWhiteFilesBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPathToDirectory"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(WhiteFilesBPLibrary_eventGetPathToDirectory_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, WhiteFilesBPLibrary_eventGetPathToDirectory_Parms), 0x0010000000000580);
			UProperty* NewProp_Path = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Path"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Path, WhiteFilesBPLibrary_eventGetPathToDirectory_Parms), 0x0010000000000080, Z_Construct_UEnum_WhiteFiles_UnrealPaths());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("WhiteFiles"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get path to location"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("WhiteFiles Path dir"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/WhiteFilesBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UWhiteFilesBPLibrary_HasExtentions()
	{
		struct WhiteFilesBPLibrary_eventHasExtentions_Parms
		{
			TArray<FString> Paths;
			TArray<FString> Extentions;
			TArray<FString> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UWhiteFilesBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasExtentions"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(WhiteFilesBPLibrary_eventHasExtentions_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, WhiteFilesBPLibrary_eventHasExtentions_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_Extentions = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Extentions"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Extentions, WhiteFilesBPLibrary_eventHasExtentions_Parms), 0x0010000000000080);
			UProperty* NewProp_Extentions_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Extentions, TEXT("Extentions"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_Paths = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Paths"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Paths, WhiteFilesBPLibrary_eventHasExtentions_Parms), 0x0010000000000080);
			UProperty* NewProp_Paths_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Paths, TEXT("Paths"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("WhiteFiles"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Filter extentions"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("WhiteFiles Path has extentions file"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/WhiteFilesBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UWhiteFilesBPLibrary_RemoveInvalidCharacters()
	{
		struct WhiteFilesBPLibrary_eventRemoveInvalidCharacters_Parms
		{
			FString Text;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UWhiteFilesBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RemoveInvalidCharacters"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(WhiteFilesBPLibrary_eventRemoveInvalidCharacters_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, WhiteFilesBPLibrary_eventRemoveInvalidCharacters_Parms), 0x0010000000000580);
			UProperty* NewProp_Text = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Text"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Text, WhiteFilesBPLibrary_eventRemoveInvalidCharacters_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("WhiteFiles"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Remove invalid Characters"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("WhiteFiles Invalid char text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/WhiteFilesBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UWhiteFilesBPLibrary_NoRegister()
	{
		return UWhiteFilesBPLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UWhiteFilesBPLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_WhiteFiles();
			OuterClass = UWhiteFilesBPLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UWhiteFilesBPLibrary_GetAllFilesInDirectory());
				OuterClass->LinkChild(Z_Construct_UFunction_UWhiteFilesBPLibrary_GetPathToDirectory());
				OuterClass->LinkChild(Z_Construct_UFunction_UWhiteFilesBPLibrary_HasExtentions());
				OuterClass->LinkChild(Z_Construct_UFunction_UWhiteFilesBPLibrary_RemoveInvalidCharacters());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UWhiteFilesBPLibrary_GetAllFilesInDirectory(), "GetAllFilesInDirectory"); // 706658277
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UWhiteFilesBPLibrary_GetPathToDirectory(), "GetPathToDirectory"); // 2984326788
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UWhiteFilesBPLibrary_HasExtentions(), "HasExtentions"); // 2386267220
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UWhiteFilesBPLibrary_RemoveInvalidCharacters(), "RemoveInvalidCharacters"); // 2742546675
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("WhiteFilesBPLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/WhiteFilesBPLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UWhiteFilesBPLibrary(Z_Construct_UClass_UWhiteFilesBPLibrary, &UWhiteFilesBPLibrary::StaticClass, TEXT("UWhiteFilesBPLibrary"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UWhiteFilesBPLibrary);
	UPackage* Z_Construct_UPackage__Script_WhiteFiles()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/WhiteFiles")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000080);
			FGuid Guid;
			Guid.A = 0xBD77C5F9;
			Guid.B = 0x9944EA4E;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
